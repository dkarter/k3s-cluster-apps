additionalServiceMonitors:
  - name: external-secrets
    namespace: external-secrets
    selector:
      matchLabels:
        app.kubernetes.io/name: external-secrets
    namespaceSelector:
      matchNames:
        - external-secrets
    endpoints:
      - port: prometheus

  - name: argocd-metrics
    namespace: argo-cd
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-server
        # app.kubernetes.io/name: argocd-metrics
    namespaceSelector:
      matchNames:
        - argo-cd
    endpoints:
      - port: 8083

alertmanager:
  ingress:
    enabled: true
    ingressClassName: traefik
    annotations:
      kubernetes.io/ingress.class: 'traefik'
      cert-manager.io/cluster-issuer: 'letsencrypt'
    hosts:
      - 'alertmanager.k3s.pro'
    paths:
      - /
    pathType: Prefix
    tls:
      - secretName: alertmanager-ingress-cert
        hosts:
          - 'alertmanager.k3s.pro'

grafana:
  admin:
    existingSecret: 'grafana-admin'
    userKey: grafana_username
    passwordKey: grafana_password
  additionalDataSources:
    - name: PostgreSQL
      type: postgres
      access: proxy
      url: blocky-db-rw.blocky.svc.cluster.local:5432
      database: app
      user: grafana_readonly
      secureJsonData:
        password: $__file{/etc/secrets/postgres-password/password}
      jsonData:
        sslmode: disable
        postgresVersion: 1700
        timescaledb: true
      version: 1
      editable: true
  extraSecretMounts:
    - name: postgres-password
      secretName: grafana-postgresql-credentials
      defaultMode: 0440
      mountPath: /etc/secrets/postgres-password
      readOnly: true
  sidecar:
    dashboards:
      enabled: true
      label: grafana_dashboard
      labelValue: '1'
      searchNamespace: ALL
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default
  dashboards:
    default:
      blocky:
        url: https://raw.githubusercontent.com/0xERR0R/blocky/refs/heads/main/docs/blocky-grafana.json
      blocky_querylog:
        url: https://raw.githubusercontent.com/0xERR0R/blocky/refs/heads/main/docs/blocky-query-grafana-postgres.json
        datasource: PostgreSQL
  ingress:
    enabled: true
    ingressClassName: traefik
    annotations:
      kubernetes.io/ingress.class: 'traefik'
      cert-manager.io/cluster-issuer: 'letsencrypt'

      gethomepage.dev/enabled: 'true'
      gethomepage.dev/description: Dashboards and alerts
      gethomepage.dev/group: System
      gethomepage.dev/icon: grafana.svg
      gethomepage.dev/name: Grafana
      gethomepage.dev/siteMonitor: 'https://grafana.k3s.pro/api/health'
      gethomepage.dev/pod-selector: >-
        app.kubernetes.io/name=grafana
      gethomepage.dev/widget.type: 'grafana'
      gethomepage.dev/widget.url: 'https://grafana.k3s.pro'
      gethomepage.dev/widget.username: 'admin'
      gethomepage.dev/widget.password: '{{`{{HOMEPAGE_VAR_GRAFANA_PASSWORD}}`}}'
    hosts:
      - 'grafana.k3s.pro'
    paths:
      - /
    pathType: Prefix
    tls:
      - secretName: grafana-ingress-cert
        hosts:
          - 'grafana.k3s.pro'

prometheus:
  # ref: https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#prometheusspec
  prometheusSpec:
    # ref: https://github.com/prometheus-operator/prometheus-operator/blob/release-0.44/pkg/prometheus/promcfg.go#L180-L183
    scrapeInterval: 15s

    retention: 7d

    # Watch all PrometheusRules in the cluster.
    ruleNamespaceSelector:
      matchLabels: {}
    ruleSelector:
      matchLabels: {}

    # Watch all ServiceMonitors in the cluster.
    serviceMonitorNamespaceSelector:
      matchLabels: {}
    serviceMonitorSelector:
      matchLabels: {}

    # Watch all PodMonitors in the cluster.
    podMonitorSelector:
      matchLabels: {}
    podMonitorNamespaceSelector:
      matchLabels: {}
