# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/app-template-4.1.2/charts/other/app-template/values.schema.json
host: &host 'blocky.k3s.pro'
http_port: &http_port 4000
dns_port: &dns_port 53
ui_port: &ui_port 3000

controllers:
  main:
    strategy: RollingUpdate
    replicas: 3 # High availability with 3 replicas

    containers:
      app:
        image:
          repository: ghcr.io/0xerr0r/blocky
          tag: v0.26.2
          pullPolicy: IfNotPresent

        args:
          - --config
          - /app/config.yml

        env:
          PGPASSWORD:
            valueFrom:
              secretKeyRef:
                name: blocky-db-app
                key: password

        probes:
          liveness: &probes
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /metrics
                port: *http_port
              initialDelaySeconds: 30
              periodSeconds: 10
              timeoutSeconds: 5
              failureThreshold: 3
          readiness: *probes

        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi

    pod:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: blocky
              app.kubernetes.io/instance: blocky

  ui:
    strategy: RollingUpdate
    replicas: 1

    containers:
      app:
        image:
          repository: gabrielduartem/blocky-ui
          tag: 1.1.4
          pullPolicy: IfNotPresent

        env:
          BLOCKY_API_URL: http://blocky.blocky.svc.cluster.local:4000

        probes:
          liveness: &ui_probes
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /
                port: *ui_port
              initialDelaySeconds: 10
              periodSeconds: 10
              timeoutSeconds: 5
              failureThreshold: 3
          readiness: *ui_probes

        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi

persistence:
  config:
    type: configMap
    name: blocky
    globalMounts:
      - path: /app/config.yml
        subPath: config.yml
        readOnly: true

  tmp:
    type: emptyDir
    globalMounts:
      - path: /tmp

configMaps:
  config:
    data:
      config.yml: |
        # Add bootstrap DNS to resolve upstream servers
        bootstrapDns:
          - upstream: tcp+udp:1.1.1.1
            ips:
              - 9.9.9.9

        upstreams:
          groups:
            default:
              - https://dns.quad9.net/dns-query    # Quad9 DoH primary
              - https://1.1.1.1/dns-query          # Cloudflare DoH fallback
          strategy: strict
          timeout: 5s

        blocking:
          denylists:
            ads:
              - https://adaway.org/hosts.txt
              - https://malware-filter.gitlab.io/malware-filter/phishing-filter-hosts.txt
              - https://pgl.yoyo.org/adservers/serverlist.php?hostformat=hosts&showintro=0&mimetype=plaintext
              - https://someonewhocares.org/hosts/zero/hosts
          allowlists:
            ads:
              - |
                t.co
          loading:
            downloads:
              timeout: 60s
              attempts: 3
              cooldown: 5s
          clientGroupsBlock:
            default:
              - ads

        clientLookup:
          clients:
            apple-tv-living-room: [10.0.0.70]
            cara-iphone: [10.0.0.71]
            dorian-ipad: [10.0.0.73]
            dorian-iphone: [10.0.0.64]
            dorian-maxbook: [10.0.0.57]
            dorians-workbook: [10.0.0.58]
            ecobee-thermostat: [10.0.0.66]
            epson-printer: [10.0.0.75]
            eufy-homebase: [10.0.0.65]
            jetkvm-media: [10.0.0.55]
            octoprint: [10.0.0.67]
            rachio: [10.0.0.68]
            samsung-fridge: [10.0.0.56]


        caching:
          minTime: 5m
          maxTime: 30m
          maxItemsCount: 0

        queryLog:
          type: timescale
          target: postgres://app@blocky-db-rw.blocky.svc.cluster.local:5432/app?sslmode=disable
          logRetentionDays: 7

        prometheus:
          enable: true
          path: /metrics

        ports:
          http: 4000

        log:
          level: info
          format: text

service:
  app:
    controller: main
    primary: true
    type: LoadBalancer
    externalTrafficPolicy: Local
    ports:
      http:
        enabled: true
        port: *http_port
        protocol: TCP
        targetPort: *http_port
      dns:
        enabled: true
        port: *dns_port
        protocol: UDP
        targetPort: 53
  ui:
    controller: ui
    type: ClusterIP
    ports:
      http:
        enabled: true
        port: *ui_port
        protocol: TCP
        targetPort: *ui_port
serviceMonitor:
  main:
    serviceName: blocky
    endpoints:
      - port: http
        scheme: http
        path: /metrics
        interval: 30s
        scrapeTimeout: 10s

ingress:
  main:
    enabled: true
    annotations:
      # These annotations will configure how this deployment is shown in Homepage
      gethomepage.dev/enabled: 'true'
      gethomepage.dev/name: Blocky DNS
      gethomepage.dev/description: High-Performance DNS Ad Blocker
      gethomepage.dev/group: Network
      gethomepage.dev/icon: blocky.svg
      gethomepage.dev/siteMonitor: 'https://blocky.k3s.pro'
      gethomepage.dev/pod-selector: >-
        app.kubernetes.io/name=blocky,
        app.kubernetes.io/component=main

      # cert-manager
      kubernetes.io/ingress.class: 'traefik'
      cert-manager.io/cluster-issuer: 'letsencrypt'
    className: 'traefik'
    hosts:
      - host: *host
        paths:
          - path: /
            pathType: Prefix
            service:
              identifier: app
              port: http
    tls:
      - hosts:
          - *host
        secretName: blocky-ingress-cert
  ui:
    enabled: true
    annotations:
      # These annotations will configure how this deployment is shown in Homepage
      gethomepage.dev/enabled: 'true'
      gethomepage.dev/name: Blocky UI
      gethomepage.dev/description: Web Interface for Blocky DNS
      gethomepage.dev/group: Network
      gethomepage.dev/icon: blocky.svg
      gethomepage.dev/siteMonitor: 'https://blocky-ui.k3s.pro'
      gethomepage.dev/pod-selector: >-
        app.kubernetes.io/name=blocky,
        app.kubernetes.io/component=ui

      # cert-manager
      kubernetes.io/ingress.class: 'traefik'
      cert-manager.io/cluster-issuer: 'letsencrypt'
    className: 'traefik'
    hosts:
      - host: blocky-ui.k3s.pro
        paths:
          - path: /
            pathType: Prefix
            service:
              identifier: ui
              port: http
    tls:
      - hosts:
          - blocky-ui.k3s.pro
        secretName: blocky-ui-ingress-cert
