# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: 3

tasks:
  default:
    desc: Lists all tasks
    cmd: task -l
    silent: true

  argo:open:
    desc: Opens ArgoCD
    cmd: open https://argocd.k3s.pro
    silent: true

  argo:login:
    desc: Logs into argocd via the CLI
    cmd: argocd login argocd.k3s.pro --username "admin" --password "$(op read 'op://Private/K3s ArgoCD/password')" --grpc-web
    silent: true

  argo:app:ls:
    desc: Lists all argocd apps
    cmd: argocd app list --grpc-web
    silent: true

  argo:app:refresh:all:
    desc: Refreshes all argocd apps
    cmd: argocd app list --grpc-web --output name | sed 's/argo-cd\///' | xargs -I{} argocd app get {} --refresh --grpc-web
    silent: true

  argo:app:refresh:
    desc: Refreshes a single argocd app selected via fzf
    cmd: |
      argocd app list --grpc-web --output name | sed 's/argo-cd\///' | fzf --prompt="Select app to refresh: " | xargs -I{} argocd app get {} --refresh --grpc-web
    silent: true

  argo:app:sync:all:
    desc: Syncs all argocd apps
    cmd: argocd app list --grpc-web --output name | sed 's/argo-cd\///' | xargs -I{} argocd app sync {} --grpc-web
    silent: true

  argo:app:sync:
    desc: Syncs a single argocd app selected via fzf
    cmd: |
      argocd app list --grpc-web --output name | sed 's/argo-cd\///' | fzf --prompt="Select app to sync: " | xargs -I{} argocd app sync {} --grpc-web
    silent: true

  fmt:
    desc: formats files
    aliases: [format]
    cmd: dprint fmt
    silent: true

  fmt:check:
    desc: checks formatting
    cmd: dprint check
    silent: true

  longhorn:open:
    desc: Opens ArgoCD
    cmd: open https://longhorn.k3s.pro
    silent: true

  media:scale_down:
    desc: Scales down all workloads in the media namespace
    cmd: kubectl scale deployment --all -n media --replicas=0

  media:scale_up:
    desc: Scales up all workloads in the media namespace
    cmd: kubectl scale deployment --all -n media --replicas=1

  gh:prs:list:
    desc: Open github PRs
    cmd: gh pr list
    silent: true

  gh:prs:open:
    desc: Open github PRs
    cmd: gh pr list -w
    silent: true

  gh:automerge:renovate:
    desc: Auto merges all PRs
    summary: |
      Auto merges all PRs

      Does the following:
      - sets PRs to auto merge
      - uses squash to merge
      - automatically delete the branch after merge
    silent: true
    cmd: |
      gh pr list --state open --author 'app/renovate' | awk '{ print $1 }' | xargs -I{} gh pr merge {} --auto --squash --delete-branch

  validate:
    desc: Validates YAML and JSON files against their defined schemas
    summary: |
      Validates YAML and JSON files against their defined schemas using Elixir

      This task:
      - Uses parallel processing via Task.async_stream for better performance (~9x faster)
      - Validates YAML files against remote schemas defined in comments
      - Validates JSON files against remote schemas defined in $schema properties
      - Excludes node_modules and focuses on schema-annotated files only
      - Uses check-jsonschema for actual schema compliance validation
      - Prints green dots (.) for success, red X for failures
      - Lists errors and exits with non-zero status on failures
      - Supports --concurrency flag to control parallel jobs (default: 25)
    silent: true
    cmd: ./validate.exs {{.CLI_ARGS}}
