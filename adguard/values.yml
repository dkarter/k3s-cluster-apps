# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/common-3.7.0/charts/library/common/values.schema.json
host: &host 'adguard.k3s.pro'
http_port: &http_port 3000
dns_port: &dns_port 53

controllers:
  main:
    strategy: Recreate
    replicas: 1

    containers:
      app:
        image:
          repository: adguard/adguardhome
          tag: v0.107.62
          pullPolicy: IfNotPresent

        # envFrom:
        #   - secretRef:
        #       name: adguard-env

        probes:
          liveness: &probes
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /
                port: *http_port
              initialDelaySeconds: 60
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 3
          readiness: *probes

  adguard-exporter:
    annotations:
      reloader.stakater.com/auto: 'true'
    containers:
      app:
        image:
          repository: ghcr.io/henrywhitaker3/adguard-exporter
          tag: v1.2.0
          pullPolicy: IfNotPresent

        env:
          ADGUARD_SERVERS: 'https://adguard.k3s.pro'

        envFrom:
          - secretRef:
              name: adguard-exporter-env

        securityContext:
          runAsNonRoot: true
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL

        resources:
          requests:
            cpu: 10m
            memory: 50Mi
          limits:
            memory: 128Mi

persistence:
  adguard-data:
    storageClass: 'longhorn'
    accessMode: 'ReadWriteOnce'
    size: 300Mi
    globalMounts:
      - path: /opt/adguardhome/work
  adguard-conf:
    storageClass: 'longhorn'
    accessMode: 'ReadWriteOnce'
    size: 10Mi
    globalMounts:
      - path: /opt/adguardhome/conf

service:
  app:
    controller: main
    primary: true
    type: LoadBalancer
    ports:
      http:
        enabled: true
        port: *http_port
        protocol: TCP
        targetPort: *http_port
      dns:
        enabled: true
        port: *dns_port
        protocol: UDP
        targetPort: *dns_port

  exporter:
    controller: adguard-exporter
    ports:
      http:
        port: 9618

serviceMonitor:
  exporter:
    serviceName: adguard-exporter
    endpoints:
      - port: http
        scheme: http
        path: /metrics
        interval: 1m
        scrapeTimeout: 10s

ingress:
  main:
    enabled: true
    annotations:
      # These annotations will configure how this deployment is shown in Homepage
      gethomepage.dev/enabled: 'true'
      gethomepage.dev/name: adguard
      gethomepage.dev/description: Network Ad Blocker
      gethomepage.dev/group: Apps
      gethomepage.dev/icon: adguard-home.svg
      gethomepage.dev/siteMonitor: 'https://adguard.k3s.pro'

      # cert-manager
      kubernetes.io/ingress.class: 'traefik'
      cert-manager.io/cluster-issuer: 'letsencrypt'
    className: 'traefik'
    hosts:
      - host: *host
        paths:
          - path: /
            pathType: Prefix
            service:
              identifier: app
              port: http
    tls:
      - hosts:
          - *host
        secretName: adguard-ingress-cert
