# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/common-3.4.0/charts/library/common/values.schema.json
app_host: &app_host 'sabnzbd.k3s.pro'
app_port: &app_port 8080

controllers:
  main:
    strategy: Recreate
    containers:
      app:
        image:
          repository: ghcr.io/onedr0p/sabnzbd
          tag: 4.3.3
          pullPolicy: IfNotPresent

        env:
          PUID: '1000'
          PGID: '1000'
          TZ: 'America/Chicago'
          SABNZBD__HOST_WHITELIST_ENTRIES: >-
            sabnzbd,
            sabnzbd.default,
            sabnzbd.default.svc,
            sabnzbd.default.svc.cluster,
            sabnzbd.default.svc.cluster.local,
            sabnzbd.k3s.pro

        probes:
          liveness: &probes
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /api?mode=version
                port: *app_port
              initialDelaySeconds: 0
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 3
          readiness: *probes

        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1000m
            memory: 1Gi

        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities: { drop: ['ALL'] }

persistence:
  config:
    enabled: true
    type: persistentVolumeClaim
    accessMode: ReadWriteOnce
    size: 1Gi
    globalMounts:
      - path: /config

  downloads:
    enabled: true
    type: persistentVolumeClaim
    existingClaim: downloads-pvc
    globalMounts:
      - path: /downloads
  tmp:
    enabled: true
    type: emptyDir
    globalMounts:
      - path: /tmp

defaultPodOptions:
  securityContext:
    runAsNonRoot: true
    runAsUser: 568
    runAsGroup: 568
    fsGroup: 568
    fsGroupChangePolicy: OnRootMismatch
    seccompProfile: { type: RuntimeDefault }

service:
  app:
    controller: main
    ports:
      http:
        port: *app_port

ingress:
  main:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: 'traefik'
      cert-manager.io/cluster-issuer: 'letsencrypt'
      gethomepage.dev/enabled: 'true'
      gethomepage.dev/name: SABnzbd
      gethomepage.dev/description: Usenet download client
      gethomepage.dev/group: Media
      gethomepage.dev/icon: sabnzbd.png
      gethomepage.dev/siteMonitor: 'https://sabnzbd.k3s.pro'
    className: 'traefik'
    hosts:
      - host: *app_host
        paths:
          - path: /
            pathType: Prefix
            service:
              identifier: app
              port: http
    tls:
      - hosts:
          - *app_host
        secretName: sabnzbd-ingress-cert
