# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/common-3.5.1/charts/library/common/values.schema.json
app_host: &app_host 'plex.k3s.pro'
app_port: &app_port 32400

controllers:
  main:
    strategy: Recreate
    containers:
      app:
        image:
          repository: plexinc/pms-docker
          tag: latest
          pullPolicy: IfNotPresent

        env:
          PUID: '1000'
          PGID: '1000'
          TZ: 'America/Chicago'

        envFrom:
          - secretRef:
              name: plex-env

        # temp disable these
        # probes:
        #   liveness: &probes
        #     enabled: true
        #     custom: true
        #     spec:
        #       httpGet:
        #         path: /identity
        #         port: *app_port
        #       initialDelaySeconds: 300
        #       periodSeconds: 10
        #   readiness: *probes
        # resources:
        #   requests:
        #     cpu: 200m
        #     memory: 512Mi
        #   limits:
        #     cpu: 2000m
        #     memory: 2Gi

persistence:
  config:
    enabled: true
    type: persistentVolumeClaim
    accessMode: ReadWriteOnce
    size: 200Mi
    globalMounts:
      - path: /config

  transcode:
    enabled: true
    type: emptyDir
    sizeLimit: 10Gi
    globalMounts:
      - path: /transcode

  movies:
    enabled: true
    type: persistentVolumeClaim
    existingClaim: downloads-storage
    globalMounts:
      - path: /data/movies
        subPath: complete/movies

  tv:
    enabled: true
    type: persistentVolumeClaim
    existingClaim: downloads-storage
    globalMounts:
      - path: /data/tv
        subPath: complete/tv

  youtube:
    enabled: true
    type: persistentVolumeClaim
    existingClaim: downloads-storage
    globalMounts:
      - path: /data/youtube
        subPath: youtube

service:
  app:
    controller: main
    primary: true
    ports:
      http:
        port: *app_port
  # Plex DLNA Server
  # https://support.plex.tv/articles/200350536-dlna/
  dnla-tcp:
    enabled: true
    controller: main
    type: NodePort
    ports:
      dnla-tcp:
        enabled: true
        port: 32469
        protocol: TCP
        targetPort: 32469
    externalTrafficPolicy: Local
  dnla-udp:
    enabled: true
    controller: main
    type: NodePort
    ports:
      dnla-udp:
        enabled: true
        port: 1900
        protocol: UDP
        targetPort: 1900
    externalTrafficPolicy: Local
  # GDM Network discovery
  # https://support.plex.tv/articles/200430283-network/
  gdm-1-udp:
    enabled: true
    controller: main
    type: NodePort
    ports:
      gdm-1-udp:
        enabled: true
        port: 32410
        protocol: UDP
        targetPort: 32410
    externalTrafficPolicy: Local
  gdm-2-udp:
    enabled: true
    controller: main
    type: NodePort
    ports:
      gdm-2-udp:
        enabled: true
        port: 32412
        protocol: UDP
        targetPort: 32412
    externalTrafficPolicy: Local
  gdm-3-udp:
    enabled: true
    controller: main
    type: NodePort
    ports:
      gdm-3-udp:
        enabled: true
        port: 32413
        protocol: UDP
        targetPort: 32413
    externalTrafficPolicy: Local
  gdm-4-udp:
    enabled: true
    controller: main
    type: NodePort
    ports:
      gdm-4-udp:
        enabled: true
        port: 32414
        protocol: UDP
        targetPort: 32414
    externalTrafficPolicy: Local

ingress:
  main:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: 'traefik'
      cert-manager.io/cluster-issuer: 'letsencrypt'
      gethomepage.dev/enabled: 'true'
      gethomepage.dev/name: Plex
      gethomepage.dev/description: Media streaming server
      gethomepage.dev/group: Media
      gethomepage.dev/icon: plex.png
      gethomepage.dev/siteMonitor: 'https://plex.k3s.pro'
    className: 'traefik'
    hosts:
      - host: *app_host
        paths:
          - path: /
            pathType: Prefix
            service:
              identifier: app
              port: http
    tls:
      - hosts:
          - *app_host
        secretName: plex-ingress-cert

defaultPodOptions:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: media
                operator: In
                values:
                  - 'true'
